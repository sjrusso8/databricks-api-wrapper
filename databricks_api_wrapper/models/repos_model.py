# generated by datamodel-codegen:
#   filename:  repos-2.0-azure.yaml
#   timestamp: 2022-05-14T13:22:11+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class Id(BaseModel):
    __root__: int = Field(
        ...,
        description='ID of the repo object in the workspace.',
        example=5249608814509279,
    )


class Url(BaseModel):
    __root__: str = Field(
        ...,
        description='URL of the Git repository to be linked.',
        example='https://github.com/jsmith/test',
    )


class Provider(BaseModel):
    __root__: str = Field(
        ...,
        description='Git provider. This field is case-insensitive. The available Git providers are gitHub, bitbucketCloud, gitLab, azureDevOpsServices, gitHubEnterprise, bitbucketServer, gitLabEnterpriseEdition and awsCodeCommit.',
        example='gitHub',
    )


class Path(BaseModel):
    __root__: str = Field(
        ...,
        description='Desired path for the repo in the workspace. Must be in the format /Repos/{folder}/{repo-name}.',
        example='/Repos/Production/testrepo',
    )


class Branch(BaseModel):
    __root__: str = Field(
        ...,
        description='Branch that the local version of the repo is checked out to.',
        example='main',
    )


class Tag(BaseModel):
    __root__: str = Field(
        ...,
        description='Tag that the local version of the repo is checked out to. Updating the repo to a tag puts the repo in a detached HEAD state. Before committing new changes, you must update the repo to a branch instead of the detached HEAD.',
        example='v1.0',
    )


class HeadCommitId(BaseModel):
    __root__: str = Field(
        ...,
        description='SHA-1 hash representing the commit ID of the current HEAD of the repo.',
        example='7e0847ede61f07adede22e2bcce6050216489171',
    )


class NextPageToken(BaseModel):
    __root__: str = Field(
        ...,
        description='Token that can be specified as a query parameter to the GET /repos endpoint to retrieve the next page of results.',
        example='eyJyZXBvX3RyZWVub2RlX2lkIjo1MjQ5NjA4ODE0NTA5Mjc5fQ==',
    )


class GetRepoResponse(BaseModel):
    id: Optional[Id] = None
    url: Optional[Url] = None
    provider: Optional[Provider] = None
    path: Optional[Path] = None
    branch: Optional[Branch] = None
    head_commit_id: Optional[HeadCommitId] = None


class GetReposResponse(BaseModel):
    repos: Optional[List[GetRepoResponse]] = None
    next_page_token: Optional[NextPageToken] = None


class CreateRepoRequest(BaseModel):
    url: Url
    provider: Provider
    path: Optional[Path] = None


class Branch1(BaseModel):
    branch: Branch


class Tag1(BaseModel):
    tag: Tag


class Error(BaseModel):
    error_code: Optional[str] = Field(None, description='Error code')
    message: Optional[str] = Field(
        None,
        description='Human-readable error message describing the cause of the error.',
    )
