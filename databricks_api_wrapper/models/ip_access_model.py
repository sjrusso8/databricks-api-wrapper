# generated by datamodel-codegen:
#   filename:  ip-access-list-azure.yaml
#   timestamp: 2022-05-14T13:21:14+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, List, Optional
from uuid import UUID

from pydantic import BaseModel, Field


class EnableIpAccessLists(Enum):
    True_ = True
    False_ = False


class WorkspaceConf(BaseModel):
    enableIpAccessLists: Optional[EnableIpAccessLists] = Field(
        None,
        description='The IP access list feature is enabled for the workspace if `true` and it is disabled if `false`. Note that these are String values, not booleans.',
        example='false',
    )


class ListId(BaseModel):
    __root__: UUID = Field(..., description='UUID of the IP access list')


class Label(BaseModel):
    __root__: str = Field(
        ...,
        description='Label for the IP access list. This **cannot** be empty.',
        example='Office VPN',
    )


class ListType(Enum):
    ALLOW = 'ALLOW'
    BLOCK = 'BLOCK'


class IpAddresses(BaseModel):
    __root__: List[Any] = Field(
        ...,
        description='Array of IP addresses or CIDR values to be added to the IP access list.',
        example=['32.19.112.0', '192.168.100.0/22'],
        min_length=1,
    )


class AddressCount(BaseModel):
    __root__: float = Field(
        ..., description='Total number of IP or CIDR values.', example=2
    )


class CreatedAt(BaseModel):
    __root__: float = Field(
        ..., description='Creation timestamp in milliseconds', example=1580265020299
    )


class CreatedBy(BaseModel):
    __root__: float = Field(
        ...,
        description='User ID of the user who created this list',
        example=202480738464078,
    )


class UpdatedAt(BaseModel):
    __root__: float = Field(
        ..., description='Update timestamp in milliseconds', example=1580265020299
    )


class UpdatedBy(BaseModel):
    __root__: float = Field(
        ...,
        description='User ID of the user who updated this list',
        example=202480738464089,
    )


class Enabled(BaseModel):
    __root__: bool = Field(
        ..., description='Specifies whether this IP access list is enabled.'
    )


class CreateIPAccessListRequest(BaseModel):
    label: Label
    list_type: ListType
    ip_addresses: IpAddresses


class CreateIPAccessListResponse(BaseModel):
    list_id: Optional[ListId] = None
    label: Optional[Label] = None
    ip_addresses: Optional[IpAddresses] = None
    address_count: Optional[AddressCount] = None
    list_type: Optional[ListType] = None
    created_at: Optional[CreatedAt] = None
    created_by: Optional[CreatedBy] = None
    updated_at: Optional[UpdatedAt] = None
    updated_by: Optional[UpdatedBy] = None
    enabled: Optional[Enabled] = None


class GetIPAccessListResponse(BaseModel):
    ip_access_lists: Optional[List[CreateIPAccessListResponse]] = None


class ReplaceIPAccessListRequest(BaseModel):
    list_id: Optional[ListId] = None
    label: Label
    list_type: ListType
    ip_addresses: IpAddresses
    enabled: Enabled


class UpdateIPAccessListRequest(BaseModel):
    list_id: Optional[ListId] = None
    label: Optional[Label] = None
    list_type: Optional[ListType] = None
    ip_addresses: Optional[IpAddresses] = None
    enabled: Optional[Enabled] = None


class Error(BaseModel):
    error_code: Optional[str] = Field(None, description='Error code')
    message: Optional[str] = Field(
        None,
        description='Human-readable error message describe the cause of the error.',
    )
